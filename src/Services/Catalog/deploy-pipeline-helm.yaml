variables:
  - name: 'imageName'
    value: 'eshop/catalog.api:$(Build.BuildId)'
  - group: AzureVariables
  - name: 'app_name'
    value: 'eshopcontainers-aks'

resources:
- repo: self

jobs:
- job: deployHelm
  displayName: eShopOnContainers Catalog Helm Deploy

  condition: succeeded()
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - task: HelmInstaller@0
    inputs:
      #helmVersion: '2.9.1' 
      #checkLatestHelmVersion: true # Optional
      #installKubectl: true 
      #kubectlVersion: '1.8.9' # Optional
      #checkLatestKubectl: true # Optional

  - task: HelmDeploy@0
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscription: $(AzureSubscription)
      azureResourceGroup: $(AKS-RG)
      kubernetesCluster: $(AKS-Cluster)
      #kubernetesServiceConnection: # Required when connectionType == Kubernetes Service Connection
      #namespace: # Optional
      command: 'upgrade' # Options: create, delete, expose, get, init, install, login, logout, ls, package, rollback, upgrade
      chartType: 'filePath' # Required when command == Install || Command == Upgrade# Options: name, filePath
      #chartName: # Required when chartType == Name
      chartPath: '$(System.DefaultWorkingDirectory)/specialK-CI-BasketAPI/helm/catalog-api'
      #chartVersion: # Optional
      releaseName: $(app_name)-catalog-api
      #overrideValues: # Optional
      #valueFile: # Optional
      #destination: '$(Build.ArtifactStagingDirectory)' # Optional
      #canaryImage: false # Optional
      #upgradeTiller: true # Optional
      #updateDependency: false # Optional
      #save: true # Optional
      install: true # Optional
      #recreate: false # Optional
      #resetValues: false # Optional
      #force: false # Optional
      #waitForExecution: true # Optional
      arguments: --values "$(System.DefaultWorkingDirectory)/_specialK-CI-BasketAPI/helm/app.yaml" --values "$(System.DefaultWorkingDirectory)/_specialK-CI-BasketAPI/helm/inf.yaml" --values "$(System.DefaultWorkingDirectory)/_specialK-CI-BasketAPI/helm/ingress_values.yaml" --set inf.k8s.dns="$(external_dns)" --set inf.registry.server="$(container_registry)" --set image.tag="$(Build.BuildNumber)" --set image.pullPolicy="Always" --set inf.appinsights.key="$(app_insight)"
      #enableTls: false # Optional
      #caCert: # Required when enableTls == True
      #certificate: # Required when enableTls == True
      #privatekey: # Required when enableTls == True
      #tillerNamespace: # Optional