trigger:
  batch: false
  branches:
    include:
      - dev
  paths:
   include:
    - src/Services/Catalog/*

pr:
  branches:
    include:
      - dev
  paths:
   include:
    - src/Services/Catalog/*

variables:
  imageName: 'eshop/catalog.api:$(Build.BuildId)'
  major: 0
  minor: 2
  # creates a counter called versioncounter and seeds it at 100 and then assigns the value to a variable named patch.
  patch: 1

resources:
- repo: self

jobs:
- job: Phase_1
  displayName: eShopOnContainers build

  condition: succeeded()
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
  - task: Docker@1
    displayName: 'Build the Catalog API docker image'
    inputs:
      azureSubscriptionEndpoint: 'niyuen (6f3097c6-c15a-44e4-89ba-990aa1a690ec)'
      azureContainerRegistry: niyuen.azurecr.io
      imageName: 'niyuen.azurecr.io/eshop/catalog.api:$(major).$(minor).$(patch)-$(Build.BuildNumber)'
      dockerFile: 'src/Services/Catalog/Catalog.API/Dockerfile'
      useDefaultContext: false
      buildContext: .

  - task: Docker@1
    displayName: Login
    inputs:
      azureSubscriptionEndpoint: 'niyuen (6f3097c6-c15a-44e4-89ba-990aa1a690ec)'
      azureContainerRegistry: niyuen.azurecr.io
      command: login

  - task: Docker@1
    displayName: 'Push the catalog api image to the ACR'
    inputs:
      command: 'push'
      azureSubscriptionEndpoint: 'niyuen (6f3097c6-c15a-44e4-89ba-990aa1a690ec)'
      azureContainerRegistry: niyuen.azurecr.io
      imageName: 'niyuen.azurecr.io/eshop/catalog.api:$(major).$(minor).$(patch)-$(Build.BuildNumber)'
  
  - bash: "echo $(major).$(minor).$(patch)-$(Build.BuildNumber) >> Build.ArtifactStagingDirectory/k8s/helm/catalog-api/catalogVersion.txt"

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: helm'
    inputs:
      PathtoPublish: k8s/helm/catalog-api
      ArtifactName: helm



- job: Phase_2
  displayName: CredScan

  condition: succeeded()
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
    displayName: 'Run CredScan'
    inputs:
      debugMode: false
      scanFolder: 'src/Services/Catalog'

  - task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@2
    displayName: 'Publish Security Analysis Logs'


  - task: securedevelopmentteam.vss-secure-development-tools.build-task-report.SdtReport@1
    displayName: 'Create Security Analysis Report'
    inputs:
      CredScan: true


  - task: securedevelopmentteam.vss-secure-development-tools.build-task-postanalysis.PostAnalysis@1
    displayName: 'Post Analysis'
    inputs:
      CredScan: true

    continueOnError: true


